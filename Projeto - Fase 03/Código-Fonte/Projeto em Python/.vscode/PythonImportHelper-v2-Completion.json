[
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "Cliente",
        "description": "Cliente",
        "isExtraImport": true,
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Slot",
        "importPath": "Slot",
        "description": "Slot",
        "isExtraImport": true,
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "Produto",
        "description": "Produto",
        "isExtraImport": true,
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "App",
        "description": "App",
        "isExtraImport": true,
        "detail": "App",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "importPath": "Rotas",
        "description": "Rotas",
        "isExtraImport": true,
        "detail": "Rotas",
        "documentation": {}
    },
    {
        "label": "App",
        "kind": 6,
        "importPath": "App",
        "description": "App",
        "peekOfCode": "class App:\n    def __init__(self):\n        self.listaDeEntregadores = []\n        self.listaDeClientes = []\n        self.listaDeUsuarios = []\n        self.listaDeEntregas = []\n        self.listaDeSlots = []\n    def addEntregador(self, nome, cpf, email, localizacao):\n        newEntregador = Entregador(nome, cpf, email, localizacao, self)\n        self.listaDeEntregadores.append(newEntregador)",
        "detail": "App",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "Cliente",
        "description": "Cliente",
        "peekOfCode": "class Cliente(Usuário):\n    def __init__(self, nome, CPF, email, formaDePagamento, appMain):\n        self.formaDePagamento = formaDePagamento\n        self.nome = nome\n        self.CPF = CPF\n        self.email = email\n        self.formaDePagamento = formaDePagamento\n        self.appMain = appMain\n    def solicitarEntrega(self, valor, origem, destino, data, hora, link):\n        self.appMain.solicita(valor, origem, destino, data, hora, link)",
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "kind": 6,
        "importPath": "Entrega",
        "description": "Entrega",
        "peekOfCode": "class Entrega:\n    def __init__(self, statusFinal, valor, origem, destino, foto, data, hora, slot):\n        self.statusFinal = statusFinal\n        self.valor = valor\n        self.origem = origem\n        self.destino = destino\n        self.foto = foto\n        self.data = data\n        self.hora = hora\n        self.slot = slot",
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "kind": 6,
        "importPath": "Entregador",
        "description": "Entregador",
        "peekOfCode": "class Entregador(Usuário):\n    def __init__(self, nome, CPF, email, localizacao, appMain):\n        self.nome = nome\n        self.CPF = CPF\n        self.email = email\n        self.disponibilidade = True\n        self.localizacao = localizacao\n        self.entrega = None\n        self.appMain = appMain\n    def finalizar(self):",
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "teste",
        "kind": 5,
        "importPath": "Main",
        "description": "Main",
        "peekOfCode": "teste = App()\nteste.addSlot(\"www.teste.com\", None)\nBruno = teste.addEntregador(\"Bruno\", 1111, \"teste@gmail.com\", (1, 1))\nSonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Main",
        "documentation": {}
    },
    {
        "label": "Bruno",
        "kind": 5,
        "importPath": "Main",
        "description": "Main",
        "peekOfCode": "Bruno = teste.addEntregador(\"Bruno\", 1111, \"teste@gmail.com\", (1, 1))\nSonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Main",
        "documentation": {}
    },
    {
        "label": "Sonic",
        "kind": 5,
        "importPath": "Main",
        "description": "Main",
        "peekOfCode": "Sonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Main",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "Produto",
        "description": "Produto",
        "peekOfCode": "class Produto:\n    def __init__(self, ID):\n        self.ID = ID",
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "kind": 6,
        "importPath": "Rotas",
        "description": "Rotas",
        "peekOfCode": "class Rotas:\n    def __init__(self, listaDeCord):\n        self.nome = None\n        self.vetorDePontos = listaDeCord",
        "detail": "Rotas",
        "documentation": {}
    },
    {
        "label": "Slot",
        "kind": 6,
        "importPath": "Slot",
        "description": "Slot",
        "peekOfCode": "class Slot:\n    def __init__(self, link, ID):\n        self.link = link\n        self.IDatual = ID\n        self.trancado = False\n    def mudarTrancado(self):\n        if(self.trancado == False): self.trancado = True\n        else: self.trancado = False\n    def mudarID(self, ID):\n        self.IDatual = ID",
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "kind": 6,
        "importPath": "Usuário",
        "description": "Usuário",
        "peekOfCode": "class Usuário:\n    def __init__(self):\n        self.nome = None\n        self.CPF = None\n        self.email = None\n        self.listaDeRotas = []\n    def deletarUsuario(self):\n        del (self)\n    def criarRota(self):\n        newRota = Rotas()",
        "detail": "Usuário",
        "documentation": {}
    }
]