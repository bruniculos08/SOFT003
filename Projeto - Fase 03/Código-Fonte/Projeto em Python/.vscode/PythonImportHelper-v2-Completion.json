[
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "Produto",
        "description": "Produto",
        "isExtraImport": true,
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "importPath": "Rotas",
        "description": "Rotas",
        "isExtraImport": true,
        "detail": "Rotas",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "Cliente",
        "description": "Cliente",
        "peekOfCode": "class Cliente(Usuário):\n    def __init__(self, formaDePagamento):\n        self.formaDePagamento = formaDePagamento\n    def criarEntrega(self, cordX, cordY):\n        newEntrega = Entrega(False, 0 , (cordX, cordY), 0)",
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Control1",
        "kind": 6,
        "importPath": "Control1",
        "description": "Control1",
        "peekOfCode": "class Control1:\n    pass",
        "detail": "Control1",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "kind": 6,
        "importPath": "Entrega",
        "description": "Entrega",
        "peekOfCode": "class Entrega:\n    def __init__(self, statusFinal, valor, destino, foto):\n        self.statusFinal = statusFinal\n        self.valor = valor\n        self.destino = destino\n        self.foto = foto\n        self.produtoDaEntrega = self.criarProduto()\n    def criarProduto(self):\n        newProduct = Produto(random.randint(0, 1000000000000))\n        # (1) Para testar essa classe:",
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "kind": 6,
        "importPath": "Entregador",
        "description": "Entregador",
        "peekOfCode": "class Entregador(Usuário):\n    def __init__(self, Entrega):\n        self.disponibilidade = True\n        self.entrega = Entrega\n    def finalizarEntrega(self):\n        self.entrega.statusFinal = True",
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "Produto",
        "description": "Produto",
        "peekOfCode": "class Produto:\n    def __init__(self):\n        self.ID = None",
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "kind": 6,
        "importPath": "Rotas",
        "description": "Rotas",
        "peekOfCode": "class Rotas:\n    def __init__(self, listaDeCord):\n        self.nome = None\n        self.vetorDePontos = listaDeCord",
        "detail": "Rotas",
        "documentation": {}
    },
    {
        "label": "Slot",
        "kind": 6,
        "importPath": "Slot",
        "description": "Slot",
        "peekOfCode": "class Slot:\n    def __init__(self):\n        self.link = None\n        self.disponibilidade = True\n        self.IDatual = None\n        self.trancado = False\n    def mudarTrancado(self):\n        if(self.trancado == False): self.trancado = True\n        else: self.trancado = False\n    def mudarID(self, ID):",
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "kind": 6,
        "importPath": "Usuário",
        "description": "Usuário",
        "peekOfCode": "class Usuário:\n    def __init__(self):\n        self.nome = None\n        self.CPF = None\n        self.email = None\n        self.listaDeRotas = []\n    def deletarUsuario(self):\n        del (self)\n    def criarRota(self):\n        newRota = Rotas()",
        "detail": "Usuário",
        "documentation": {}
    }
]