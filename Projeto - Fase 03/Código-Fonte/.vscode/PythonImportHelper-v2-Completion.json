[
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "importPath": "Entregador",
        "description": "Entregador",
        "isExtraImport": true,
        "detail": "Entregador",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "Cliente",
        "description": "Cliente",
        "isExtraImport": true,
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "Cliente",
        "description": "Cliente",
        "isExtraImport": true,
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "importPath": "Cliente",
        "description": "Cliente",
        "isExtraImport": true,
        "detail": "Cliente",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "importPath": "Entrega",
        "description": "Entrega",
        "isExtraImport": true,
        "detail": "Entrega",
        "documentation": {}
    },
    {
        "label": "Slot",
        "importPath": "Slot",
        "description": "Slot",
        "isExtraImport": true,
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "Slot",
        "importPath": "Slot",
        "description": "Slot",
        "isExtraImport": true,
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "Slot",
        "importPath": "Slot",
        "description": "Slot",
        "isExtraImport": true,
        "detail": "Slot",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "importPath": "Usuário",
        "description": "Usuário",
        "isExtraImport": true,
        "detail": "Usuário",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "Produto",
        "description": "Produto",
        "isExtraImport": true,
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "Produto",
        "importPath": "Produto",
        "description": "Produto",
        "isExtraImport": true,
        "detail": "Produto",
        "documentation": {}
    },
    {
        "label": "App",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "App",
        "description": "App",
        "detail": "App",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "App",
        "description": "App",
        "isExtraImport": true,
        "detail": "App",
        "documentation": {}
    },
    {
        "label": "App",
        "importPath": "App",
        "description": "App",
        "isExtraImport": true,
        "detail": "App",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "importPath": "Rotas",
        "description": "Rotas",
        "isExtraImport": true,
        "detail": "Rotas",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "sqrt",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "unittest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unittest",
        "description": "unittest",
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "Rota",
        "importPath": "Rota",
        "description": "Rota",
        "isExtraImport": true,
        "detail": "Rota",
        "documentation": {}
    },
    {
        "label": "App",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).App",
        "description": "Projeto em Python (Versão 01).App",
        "peekOfCode": "class App:\n    def __init__(self):\n        self.listaDeEntregadores = []\n        self.listaDeClientes = []\n        self.listaDeUsuarios = []\n        self.listaDeEntregas = []\n        self.listaDeSlots = []\n    def addEntregador(self, nome, cpf, email, localizacao):\n        newEntregador = Entregador(nome, cpf, email, localizacao, self)\n        self.listaDeEntregadores.append(newEntregador)",
        "detail": "Projeto em Python (Versão 01).App",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Cliente",
        "description": "Projeto em Python (Versão 01).Cliente",
        "peekOfCode": "class Cliente(Usuário):\n    def __init__(self, nome, CPF, email, formaDePagamento, appMain):\n        self.formaDePagamento = formaDePagamento\n        self.nome = nome\n        self.CPF = CPF\n        self.email = email\n        self.formaDePagamento = formaDePagamento\n        self.appMain = appMain\n    def solicitarEntrega(self, valor, origem, destino, data, hora, link):\n        self.appMain.solicita(valor, origem, destino, data, hora, link)",
        "detail": "Projeto em Python (Versão 01).Cliente",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Entrega",
        "description": "Projeto em Python (Versão 01).Entrega",
        "peekOfCode": "class Entrega:\n    def __init__(self, statusFinal, valor, origem, destino, foto, data, hora, slot, produto):\n        self.statusFinal = statusFinal\n        self.valor = valor\n        self.origem = origem\n        self.destino = destino\n        self.foto = foto\n        self.data = data\n        self.hora = hora\n        self.slot = slot",
        "detail": "Projeto em Python (Versão 01).Entrega",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Entregador",
        "description": "Projeto em Python (Versão 01).Entregador",
        "peekOfCode": "class Entregador(Usuário):\n    def __init__(self, nome, CPF, email, localizacao, appMain):\n        self.nome = nome\n        self.CPF = CPF\n        self.email = email\n        self.disponibilidade = True\n        self.localizacao = localizacao\n        self.entrega = None\n        self.appMain = appMain\n    def aceitarEntrega(self, ListaDeEntregas, number):",
        "detail": "Projeto em Python (Versão 01).Entregador",
        "documentation": {}
    },
    {
        "label": "teste",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 01).Main",
        "description": "Projeto em Python (Versão 01).Main",
        "peekOfCode": "teste = App()\nteste.addSlot(\"www.teste.com\", None)\nBruno = teste.addEntregador(\"Bruno\", 1111, \"teste@gmail.com\", (1, 1))\nSonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Projeto em Python (Versão 01).Main",
        "documentation": {}
    },
    {
        "label": "Bruno",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 01).Main",
        "description": "Projeto em Python (Versão 01).Main",
        "peekOfCode": "Bruno = teste.addEntregador(\"Bruno\", 1111, \"teste@gmail.com\", (1, 1))\nSonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Projeto em Python (Versão 01).Main",
        "documentation": {}
    },
    {
        "label": "Sonic",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 01).Main",
        "description": "Projeto em Python (Versão 01).Main",
        "peekOfCode": "Sonic = teste.addCliente(\"Sonic\", 1234, \"rapido@gmail.com\", \"Pix\")\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")\nteste.linkUse(\"www.teste.com\", None)\nBruno.tirarFoto(\"JPEG\")\nBruno.finalizar()\nSonic.solicitarEntrega(1, (1,0), (0, 1), 1, 1, \"wwww.teste.com\")",
        "detail": "Projeto em Python (Versão 01).Main",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Produto",
        "description": "Projeto em Python (Versão 01).Produto",
        "peekOfCode": "class Produto:\n    def __init__(self, ID):\n        self.ID = ID",
        "detail": "Projeto em Python (Versão 01).Produto",
        "documentation": {}
    },
    {
        "label": "Rotas",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Rotas",
        "description": "Projeto em Python (Versão 01).Rotas",
        "peekOfCode": "class Rotas:\n    def __init__(self, listaDeCord):\n        self.nome = None\n        self.vetorDePontos = listaDeCord",
        "detail": "Projeto em Python (Versão 01).Rotas",
        "documentation": {}
    },
    {
        "label": "Slot",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Slot",
        "description": "Projeto em Python (Versão 01).Slot",
        "peekOfCode": "class Slot:\n    def __init__(self, link, ID):\n        self.link = link\n        self.IDatual = ID\n        self.trancado = False\n    def mudarTrancado(self):\n        if(self.trancado == False): self.trancado = True\n        else: self.trancado = False\n    def mudarID(self, ID):\n        self.IDatual = ID",
        "detail": "Projeto em Python (Versão 01).Slot",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 01).Usuário",
        "description": "Projeto em Python (Versão 01).Usuário",
        "peekOfCode": "class Usuário:\n    def __init__(self):\n        self.nome = None\n        self.CPF = None\n        self.email = None\n        self.listaDeRotas = []\n    def deletarUsuario(self):\n        del (self)\n    def criarRota(self):\n        newRota = Rotas()",
        "detail": "Projeto em Python (Versão 01).Usuário",
        "documentation": {}
    },
    {
        "label": "App",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).App",
        "description": "Projeto em Python (Versão 02).App",
        "peekOfCode": "class App:\n    def __init__(self):\n        self.listaDeClientes = []\n        self.listaDeEntregadores = []\n        self.listaDeSlots = []\n        self.listaDeEntregas = []\n        self.listaDeObjetosRemovidos = []\n    def addCliente(self, newCliente):\n        self.listaDeClientes.append(newCliente)\n    def addEntregador(self, newEntregador):",
        "detail": "Projeto em Python (Versão 02).App",
        "documentation": {}
    },
    {
        "label": "Cliente",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Cliente",
        "description": "Projeto em Python (Versão 02).Cliente",
        "peekOfCode": "class Cliente(Usuário):\n    def __init__(self, nome, CPF, email, appMain, formaDePagamento):\n        super().__init__(nome, CPF, email, appMain)\n        self.formaDePagamento = formaDePagamento\n        self.appMain.addCliente(self)\n    # (1) O cliente coloca o produto em um slotDeOrigem (mas ele só tem como saber o link desse slot)...\n    # ... por isso a classe App deve ter um método para buscar tal slot.\n    # Após encontrar tal slot, a entrega é criada com slotDeOrigem e slotDeDestino:\n    def criarEntrega(self, link, destino):\n        slotDeOrigem = self.appMain.buscaSlot(link)",
        "detail": "Projeto em Python (Versão 02).Cliente",
        "documentation": {}
    },
    {
        "label": "Entrega",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Entrega",
        "description": "Projeto em Python (Versão 02).Entrega",
        "peekOfCode": "class Entrega:\n    def __init__(self, slotDeOrigem, slotDeDestino, appMain):\n        self.statusFinal = False\n        self.valor = self.encontrarValor(slotDeOrigem, slotDeDestino)\n        self.slotDeOrigem = slotDeOrigem\n        self.slotDeDestino = slotDeDestino\n        self.foto = None\n        self.produto = self.criarProduto()\n        self.appMain = appMain\n        self.appMain.addEntrega(self)",
        "detail": "Projeto em Python (Versão 02).Entrega",
        "documentation": {}
    },
    {
        "label": "Entregador",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Entregador",
        "description": "Projeto em Python (Versão 02).Entregador",
        "peekOfCode": "class Entregador(Usuário):\n    def __init__(self, nome, CPF, email, appMain):\n        super().__init__(nome, CPF, email, appMain)\n        self.disponibilidade = True\n        self.entregaAtual = None\n        self.appMain.addEntregador(self)\n    # (1) O entregador seleciona uma origem e um destino para o qual aceitará fazer entrega e...\n    # ... então o App seleciona uma entrega a ser feita:   \n    def aceitarEntrega(self, origem, destino):\n        slotDeOrigem = self.appMain.buscaSlot(origem)",
        "detail": "Projeto em Python (Versão 02).Entregador",
        "documentation": {}
    },
    {
        "label": "teste",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 02).Main",
        "description": "Projeto em Python (Versão 02).Main",
        "peekOfCode": "teste = App()\nArmario01 = Slot(\"www.armario01.com\", (1, 1), teste)\nArmario02 = Slot(\"www.armario02.com\", (2, 1), teste)\nBruno = Cliente(\"Bruno\", 1234, \"bruno@gmail.com\", teste, \"Pix\")\nSonic = Entregador(\"Sonic\", 12345, \"sonic@gmail.com\", teste)\nBruno.criarEntrega(\"www.armario01.com\", (2,1))\nSonic.aceitarEntrega((1,1), (2,1))\nSonic.abrirSlotDeOrigem()\nSonic.abrirSlotDeDestino()\nSonic.finalizar(Sonic.entregaAtual)",
        "detail": "Projeto em Python (Versão 02).Main",
        "documentation": {}
    },
    {
        "label": "Armario01",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 02).Main",
        "description": "Projeto em Python (Versão 02).Main",
        "peekOfCode": "Armario01 = Slot(\"www.armario01.com\", (1, 1), teste)\nArmario02 = Slot(\"www.armario02.com\", (2, 1), teste)\nBruno = Cliente(\"Bruno\", 1234, \"bruno@gmail.com\", teste, \"Pix\")\nSonic = Entregador(\"Sonic\", 12345, \"sonic@gmail.com\", teste)\nBruno.criarEntrega(\"www.armario01.com\", (2,1))\nSonic.aceitarEntrega((1,1), (2,1))\nSonic.abrirSlotDeOrigem()\nSonic.abrirSlotDeDestino()\nSonic.finalizar(Sonic.entregaAtual)\nSonic.tirarFoto(\"JPEG\")",
        "detail": "Projeto em Python (Versão 02).Main",
        "documentation": {}
    },
    {
        "label": "Armario02",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 02).Main",
        "description": "Projeto em Python (Versão 02).Main",
        "peekOfCode": "Armario02 = Slot(\"www.armario02.com\", (2, 1), teste)\nBruno = Cliente(\"Bruno\", 1234, \"bruno@gmail.com\", teste, \"Pix\")\nSonic = Entregador(\"Sonic\", 12345, \"sonic@gmail.com\", teste)\nBruno.criarEntrega(\"www.armario01.com\", (2,1))\nSonic.aceitarEntrega((1,1), (2,1))\nSonic.abrirSlotDeOrigem()\nSonic.abrirSlotDeDestino()\nSonic.finalizar(Sonic.entregaAtual)\nSonic.tirarFoto(\"JPEG\")\nSonic.finalizar(Sonic.entregaAtual)",
        "detail": "Projeto em Python (Versão 02).Main",
        "documentation": {}
    },
    {
        "label": "Bruno",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 02).Main",
        "description": "Projeto em Python (Versão 02).Main",
        "peekOfCode": "Bruno = Cliente(\"Bruno\", 1234, \"bruno@gmail.com\", teste, \"Pix\")\nSonic = Entregador(\"Sonic\", 12345, \"sonic@gmail.com\", teste)\nBruno.criarEntrega(\"www.armario01.com\", (2,1))\nSonic.aceitarEntrega((1,1), (2,1))\nSonic.abrirSlotDeOrigem()\nSonic.abrirSlotDeDestino()\nSonic.finalizar(Sonic.entregaAtual)\nSonic.tirarFoto(\"JPEG\")\nSonic.finalizar(Sonic.entregaAtual)\nSonic.aceitarEntrega((1,1), (2,1))",
        "detail": "Projeto em Python (Versão 02).Main",
        "documentation": {}
    },
    {
        "label": "Sonic",
        "kind": 5,
        "importPath": "Projeto em Python (Versão 02).Main",
        "description": "Projeto em Python (Versão 02).Main",
        "peekOfCode": "Sonic = Entregador(\"Sonic\", 12345, \"sonic@gmail.com\", teste)\nBruno.criarEntrega(\"www.armario01.com\", (2,1))\nSonic.aceitarEntrega((1,1), (2,1))\nSonic.abrirSlotDeOrigem()\nSonic.abrirSlotDeDestino()\nSonic.finalizar(Sonic.entregaAtual)\nSonic.tirarFoto(\"JPEG\")\nSonic.finalizar(Sonic.entregaAtual)\nSonic.aceitarEntrega((1,1), (2,1))",
        "detail": "Projeto em Python (Versão 02).Main",
        "documentation": {}
    },
    {
        "label": "Produto",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Produto",
        "description": "Projeto em Python (Versão 02).Produto",
        "peekOfCode": "class Produto:\n    def __init__(self, ID):\n        self.ID = ID",
        "detail": "Projeto em Python (Versão 02).Produto",
        "documentation": {}
    },
    {
        "label": "Rota",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Rota",
        "description": "Projeto em Python (Versão 02).Rota",
        "peekOfCode": "class Rota:\n    def __init__(self, nome, listaDeCoordenadas):\n        self.nome = None\n        self.ListaDeCoordenadas = None",
        "detail": "Projeto em Python (Versão 02).Rota",
        "documentation": {}
    },
    {
        "label": "Slot",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Slot",
        "description": "Projeto em Python (Versão 02).Slot",
        "peekOfCode": "class Slot:\n    def __init__(self, link, localizacao, appMain):\n        self.link = link\n        # self.disponibilidade = None       Obs.: este atributo é redundante\n        self.IDatual = None\n        self.trancado = False\n        self.localizacao = localizacao\n        self.appMain = appMain\n        self.appMain.addSlot(self)",
        "detail": "Projeto em Python (Versão 02).Slot",
        "documentation": {}
    },
    {
        "label": "Usuário",
        "kind": 6,
        "importPath": "Projeto em Python (Versão 02).Usuário",
        "description": "Projeto em Python (Versão 02).Usuário",
        "peekOfCode": "class Usuário:\n    def __init__(self, nome, CPF, email, appMain):\n        self.nome = nome\n        self.CPF = CPF\n        self.email = email\n        self.listaDeRotas = []\n        self. appMain = appMain\n    def deletarUsuario(self):\n        del (self)\n    def criarRota(self, nomeDaRota, ListaDeCoordenadas):",
        "detail": "Projeto em Python (Versão 02).Usuário",
        "documentation": {}
    }
]